{"version":3,"sources":["Todo.js","TodoList.js","getDataFromServer.js","App.js","index.js"],"names":["Todo","_ref","todos","map","todo","react_default","a","createElement","key","id","className","type","title","user","name","completed","TodoList","sortTodos","onClick","src_Todo","getDataFromServer","url","fetch","then","responce","json","App","_useState","useState","_useState2","Object","slicedToArray","setTodos","_useState3","_useState4","contentHidden","setContentHidden","_useState5","_useState6","isLoading","setLoading","_useState7","_useState8","selectedButton","setValueButton","src_TodoList","x","toConsumableArray","sort","b","localeCompare","sortTitle","reverse","_ref2","todosArr","usersArr","usersAndTodos","regenerator_default","async","_context","prev","next","awrap","Promise","all","sent","objectSpread2","find","human","userId","stop","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7aac2602.chunk.js","sourcesContent":["/* eslint-disable react/jsx-curly-brace-presence */\nimport React from 'react';\n\nconst Todo = ({ todos }) => (\n  todos.map(todo => (\n    <li key={todo.id} className=\"listTodos__todo\" type=\"none\">\n      <h2>\n        <span className=\"listTodos__todo__label\">\n          {`Todo: `}\n        </span>\n        {todo.title}\n      </h2>\n      <h3>\n        <span className=\"listTodos__todo__label\">\n          {`Name: `}\n        </span>\n        {todo.user.name}\n      </h3>\n      <h3>\n        <span className=\"listTodos__todo__label\">\n          {`Todo completed: `}\n        </span>\n        {todo.completed ? '✅' : '❌'}\n      </h3>\n    </li>\n  ))\n);\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nconst TodoList = (\n  { todos, sortTodos }\n) => (\n  <section>\n    <div className=\"listTodos__sort\">\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => sortTodos('title')}\n      >\n        Sort by Title\n      </button>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => sortTodos('name')}\n      >\n        Sort by Name\n      </button>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => sortTodos('progress')}\n      >\n        Sort by Progress\n      </button>\n    </div>\n    <ul className=\"listTodos__body\">\n      <Todo todos={todos} />\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  sortTodos: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","const getDataFromServer = url => fetch(url).then(responce => responce.json());\n\nexport default getDataFromServer;\n","import React, { useState } from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\nimport getDataFromServer from './getDataFromServer';\n\nconst urlTodos = 'https://jsonplaceholder.typicode.com/todos';\nconst urlUser = 'https://jsonplaceholder.typicode.com/users';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [contentHidden, setContentHidden] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [selectedButton, setValueButton] = useState('');\n\n  const loadAll = async() => {\n    setLoading(true);\n\n    const [todosArr, usersArr] = await\n    Promise.all([getDataFromServer(urlTodos), getDataFromServer(urlUser)]);\n\n    const usersAndTodos = todosArr.map(todo => ({\n      ...todo,\n      user: usersArr.find(human => human.id === todo.userId),\n    }));\n\n    setTodos(usersAndTodos);\n    setContentHidden(true);\n  };\n\n  const sortTodos = (x) => {\n    switch (x) {\n      case 'title':\n        if (x !== selectedButton) {\n          setTodos([...todos]\n            .sort((a, b) => a.title.localeCompare(b.title)));\n          setValueButton(x);\n        }\n        break;\n\n      case 'name':\n        if (x !== selectedButton) {\n          setTodos([...todos]\n            .sort((a, b) => a.user.name.localeCompare(b.user.name)));\n          setValueButton(x);\n        }\n        break;\n\n      case 'progress':\n        if (x !== selectedButton) {\n          setTodos([...todos]\n            .sort((a, b) => a.completed - b.completed));\n          setValueButton(x);\n        }\n        break;\n      default: setTodos([...todos]);\n    }\n\n    if (x === selectedButton) {\n      const sortTitle = [...todos].reverse();\n\n      setTodos(sortTitle);\n    }\n  };\n\n  return (\n    <section className=\"listTodos\">\n      <h1 className=\"listTodos__title\">Dynamic list of todos</h1>\n      <section>\n        {!contentHidden ? (\n          <button type=\"button\" onClick={loadAll} className=\"button\">\n            {!isLoading ? 'Load All' : 'Is loading...' }\n          </button>\n        ) : (\n          <TodoList\n            todos={todos}\n            sortTodos={sortTodos}\n          />\n        )\n        }\n      </section>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}